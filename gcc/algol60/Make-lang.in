# Top level makefile fragment for Algol 60 For GCC. -*- makefile -*-

# This file provides the language dependent support in the main Makefile.
# Each language makefile fragment must provide the following targets:
# foo.all.cross, foo.start.encap, foo.rest.encap,
# foo.install-common, foo.install-man, foo.install-info, foo.dvi, foo.html,
# foo.uninstall,
# foo.mostlyclean, foo.clean, foo.distclean,
# foo.maintainer-clean, foo.stage1, foo.stage2, foo.stage3, foo.stage4
#
# where `foo' is the name of the language.
#
# It should also provide rules for:
#
# - making any compiler driver (ga60)
# - the compiler proper (algol601)
# - define the names for selecting the language in LANGUAGES.

GA60_INSTALL_NAME := $(shell echo ga60|sed '$(program_transform_name)')
ALGOL60_TARGET_INSTALL_NAME := $(target_noncanonical)-$(shell echo ga60|sed '$(program_transform_name)')
AL60L_DIR := /home/ant/stud/dp/gcc-algol/trunk/al60l

ALGOL60_GENERATED =
ALGOL60_EXES = ga60

TREECC  := treecc

# for referring to all objects that make up AL60L parsing library
AL60L_OBJS = algol60/lexer-tab.o algol60/parser-tab.o algol60/ast-tab.o \
		algol60/estring.o algol60/logger.o algol60/cursor.o \
		algol60/slist.o algol60/util.o

.PHONY: algol60

# Define the names for selecting Algol 60 in LANGUAGES.
algol60: algol601$(exeext) ga60$(exeext)

# core compiler
algol601$(exeext): algol60/algol601.o algol60/lang.o algol60/algol-tree.o \
		algol60/tree-convert.o algol60/al60l-bind.o\
		$(BACKEND) $(LIBSDEPS) attribs.o $(AL60L_OBJS)
	$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \
		algol60/algol601.o algol60/lang.o algol60/algol-tree.o \
		algol60/tree-convert.o algol60/al60l-bind.o\
		$(BACKEND) $(LIBS) attribs.o $(AL60L_OBJS)

# Create the compiler driver ga60
ga60$(exeext): $(GCC_OBJS) version.o prefix.o intl.o $(EXTRA_GCC_OBJS) \
		$(LIBDEPS) algol60/spec.o
	$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ algol60/spec.o \
		$(GCC_OBJS) version.o prefix.o intl.o $(EXTRA_GCC_OBJS) $(LIBS)

#

ALGOL60_GTFILES =
#gt-algol60-algol-tree.h

# GCC side

algol60/gcc-stuff: $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TM_H) $(GGC_H) \
		$(TREE_H) $(LANGHOOKS_DEF_H) $(TARGET_H)\
		coretypes.h flags.h toplev.h diagnostic.h varray.h\
		input.h options.h opts.h output.h langhooks.h\
		algol60/algol-tree.h
	touch algol60/gcc-stuff

algol60/algol601.o: algol60/algol601.c algol60/gcc-stuff \
		$(ALGOL60_GTFILES) gtype-algol60.h

algol60/lang.o: algol60/lang.c algol60/lexer.h algol60/parser.h algol60/ast-tab.h\
		algol60/gcc-stuff \
		$(ALGOL60_GTFILES) gtype-algol60.h

algol60/algol-tree.o: algol60/algol-tree.c algol60/gcc-stuff \
		$(ALGOL60_GTFILES) gtype-algol60.h

algol60/tree-convert.o: algol60/tree-convert.c algol60/gcc-stuff \
		$(ALGOL60_GTFILES) gtype-algol60.h

algol60/spec.o: algol60/spec.c $(CONFIG_H) $(SYSTEM_H) \
		coretypes.h diagnostic.h $(TREE_H) flags.h toplev.h langhooks.h $(TM_H) \
		$(ALGOL60_GTFILES) gtype-algol60.h

algol60/al60l-bind.o: algol60/al60l-bind.c algol60/al60l-bind.h algol60/ast-tab.h \
		algol60/gcc-stuff \
		$(ALGOL60_GTFILES) gtype-algol60.h

# AL60L side

algol60.srcextra: algol60/parse-tab.c algol60/parse-tab.h \
		algol60/lexer-tab.c algol60/lexer-tab.h \
		algol60/ast-tab.c algol60/ast-tab.h
	-cp -p $^ $(srcdir)/algol60

algol60/util.o: algol60/util.c algol60/util.h algol60/gcc-stuff

algol60/slist.o: algol60/slist.c algol60/slist.h algol60/pd.h algol60/gcc-stuff

algol60/cursor.o: algol60/cursor.c algol60/cursor.h algol60/pd.h algol60/util.h algol60/gcc-stuff

algol60/logger.o: algol60/logger.c algol60/logger.h algol60/pd.h algol60/gcc-stuff

algol60/estring.o: algol60/estring.c algol60/estring.h algol60/pd.h algol60/gcc-stuff

algol60/ast-tab.c: algol60/ast.tc algol60/statement.tc algol60/symbol.tc \
		algol60/expression.tc algol60/type.tc algol60/gcc.tc \
		algol60/gcc-stuff
	$(TREECC) -o algol60/ast-tab.c -h algol60/ast-tab.h $(srcdir)/algol60/ast.tc

algol60/ast-tab.h: algol60/ast.tc algol60/statement.tc algol60/symbol.tc \
		algol60/expression.tc algol60/type.tc algol60/gcc.tc \
		algol60/ast-tab.c algol60/gcc-stuff
	[ -f algol60/ast-tab.h ]

algol60/ast-tab.o: algol60/ast-tab.c algol60/ast-tab.h algol60/slist.h algol60/gcc-stuff

algol60/parser-tab.o: algol60/parser-tab.c algol60/ast-tab.o algol60/gcc-stuff

algol60/parser-tab.c: algol60/parser.y algol60/parser.h algol60/lexer.h \
		algol60/logger.h algol60/pd.h algol60/cursor.h algol60/gcc-stuff
	$(BISON) -t -v -d $(BISONFLAGS) -o algol60/parser-tab.c $(srcdir)/algol60/parser.y

algol60/parser-tab.h: algol60/parser-tab.c
	[ -f algol60/parser-tab.h ]

algol60/lexer.h: algol60/parser-tab.h algol60/ast-tab.h

algol60/lexer-tab.o: algol60/lexer.h algol60/lexer-tab.c algol60/gcc-stuff

algol60/lexer-tab.c: algol60/lexer.l algol60/lexer.h algol60/parser-tab.h \
		algol60/estring.h algol60/logger.h algol60/pd.h algol60/cursor.h \
		algol60/gcc-stuff
	$(FLEX) --never-interactive $(FLEXFLAGS) -o algol60/lexer-tab.c \
		--header-file=algol60/lexer-tab.h $(srcdir)/algol60/lexer.l
	sed -i -e '/static void yyunput/s/;/__attribute__((unused));/' algol60/lexer-tab.c

algol60/lexer-tab.h: algol60/lexer-tab.c
	[ -f algol60/lexer-tab.h ]




# generated files are put into the source directory in case someone
# wants to build but does not have lex/yacc

# -- NEEDS TO BE COMPARED AGAINST THE REAL MAKEFILE FROM AL60L LIBRARY --
#
#algol60/lexer-tab.c: algol60/lexer.l
#	-$(FLEX) $(FLEXFLAGS) -o$@ $<
#
#algol60/parser-tab.c algol60/parser-tab.h algol60/parser-tab.output: algol60/parser.y
#	-$(BISON) $(BISONFLAGS) -v --defines --output=algol60/parser-tab.c $<

#
# Build hooks:

algol60.all.cross:
	_error_not_here_yet - havent even thought about it - it may even work

algol60.start.encap:
algol60.rest.encap:
algol60.man:
algol60.srcman:

algol60.tags: force
	cd $(srcdir)/algol60; etags -o TAGS.sub *.y *.l *.c *.h; \
		etags --include TAGS.sub --include ../TAGS.sub

algol60.info: doc/algol60.info

algol60.srcinfo: doc/algol60.info
	-cp -p $^ $(srcdir)/doc

algol60.dvi: doc/algol60.dvi

TEXI_ALGOL60_FILES = algol60/ga60.texi \
	 $(gcc_docdir)/include/gcc-common.texi \
	 $(gcc_docdir)/include/gpl.texi \
	 $(gcc_docdir)/include/fdl.texi \
	 $(gcc_docdir)/include/funding.texi \
	 gcc-vers.texi

doc/ga60.info: $(TEXI_ALGOL60_FILES)
	$(MAKEINFO) $(MAKEINFOFLAGS) -I $(gcc_docdir)/include -o $@ $<

doc/ga60.dvi: $(TEXI_ALGOL60_FILES)
	$(TEXI2DVI) -I $(abs_docdir)/include -o $@ $<

ga60.html: $(build_htmldir)/algol60/index.html

$(build_htmldir)/algol60/index.html: $(TEXI_ALGOL60_FILES)
	$(mkinstalldirs) $(@D)
	rm -f $(@D)/*
	$(TEXI2HTML) -I $(gcc_docdir)/include -I $(srcdir)/algol60 -o $(@D) $<

#
# Install hooks:

# Install
.phony:algol60.install.common
.phony:algol60.install

algol60.install-common: installdirs
	-if [ -f algol601$(exeext) ] ; then \
	  rm -f $(DESTDIR)$(bindir)/$(GA60_INSTALL_NAME)$(exeext); \
	  $(INSTALL_PROGRAM) ga60$(exeext) $(DESTDIR)$(bindir)/$(GA60_INSTALL_NAME)$(exeext); \
	  chmod a+x $(DESTDIR)$(bindir)/$(GA60_INSTALL_NAME)$(exeext); \
	  if [ -f ga60-cross$(exeext) ] ; then \
	    if [ -d $(DESTDIR)$(gcc_tooldir)/bin/. ] ; then \
	      rm -f $(DESTDIR)$(gcc_tooldir)/bin/ga60$(exeext); \
	      $(INSTALL_PROGRAM) ga60-cross$(exeext) $(DESTDIR)$(gcc_tooldir)/bin/ga60$(exeext); \
	    else true; fi; \
	  else \
	    rm -f $(DESTDIR)$(bindir)/$(GA60_TARGET_INSTALL_NAME)$(exeext); \
	    $(LN) $(DESTDIR)$(bindir)/$(GA60_INSTALL_NAME)$(exeext) $(DESTDIR)$(bindir)/$(GA60_TARGET_INSTALL_NAME)$(exeext); \
	  fi ; \
	fi

algol60.install-info: $(DESTDIR)$(infodir)/ga60.info

algol60.install-man:
#$(DESTDIR)$(man1dir)/$(GA60_INSTALL_NAME)$(man1ext)

algol60.uninstall:
	if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/dev/null 2>&1; then \
	  echo " install-info --delete --info-dir=$(DESTDIR)$(infodir) $(DESTDIR)$(infodir)/ga60.info"; \
	  install-info --delete --info-dir=$(DESTDIR)$(infodir) $(DESTDIR)$(infodir)/ga60.info || : ; \
	else : ; fi; \
	rm -rf $(DESTDIR)$(bindir)/$(GA60_INSTALL_NAME)$(exeext); \
	rm -rf $(DESTDIR)$(man1dir)/$(GA60_INSTALL_NAME)$(man1ext); \
	rm -rf $(DESTDIR)$(bindir)/$(GA60_TARGET_INSTALL_NAME)$(exeext); \
	rm -rf $(DESTDIR)$(infodir)/ga60.info*


#
# Clean hooks:
# A lot of the ancillary files are deleted by the main makefile.
# We just have to delete files specific to us.

algol60.mostlyclean:
	-rm -f algol601$(exeext)
	-rm -f algol60/*.o

algol60.clean: algol60.mostlyclean

algol60.distclean: algol60.clean
	-rm -f algol60/config.status

algol60.maintainer-clean: algol60.distclean
	-rm -f algol60/parser-tab.output algol60/parser-tab.c algol60/parser-tab.h
	-rm -f algol60/lexer-tab.c algol60/lexer-tab.h
	-rm -f algol60/ast-tab.c algol60/ast-tab.h
	-rm -R $(srcdir)/algol60/*~

#
# Stage hooks:
# The main makefile has already created stage?/algol60.

algol60.stage1: stage1-start
	-mv algol60/*$(objext) stage1/algol60
algol60.stage2: stage2-start
	-mv algol60/*$(objext) stage2/algol60
algol60.stage3: stage3-start
	-mv algol60/*$(objext) stage3/algol60
algol60.stage4: stage4-start
	-mv algol60/*$(objext) stage4/algol60
algol60.stageprofile: stageprofile-start
	-mv algol60/*$(objext) stageprofile/algol60
algol60.stagefeedback: stagefeedback-start
	-mv algol60/*$(objext) stagefeedback/algol60

#
# Maintenance hooks:

# List of targets that can use the generic check- rule and its // variant.
lang_checks += check-algol60

#

config.status: algol60/config-lang.in
